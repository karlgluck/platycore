interface Lang
   {
   ClampStringLengthP(text:string, length:number):string;
   GetRainbowColorFromAnyP(v:any):string;
   GetDarkRainbowColorFromAnyP(v:any):string;
   GetStringFromBase64(stringToDecode:string):string;
   GetBase64FromString(stringToEncode:string):string;
   GetObjectFromBase64(stringToDecode:string):object;
   GetBase64FromObject(objectToEncode:object):string;
   IsDate(v:any):boolean;
   IsNumber(v:any):boolean;
   stopwatchStringFromDuration(dtDuration:number):string;
   stopwatchStringFromDurationInMillis(dtMilliseconds:number):string;
   stopwatchStringFromDurationInSeconds(dtSeconds:number):string;
   Average(numbers:number[]):number;
   IsUndefined(v:number):boolean;
   IsObject(v:number):boolean;
   IsArray(v:number):boolean;
   IsFunction(v:number):boolean;
   IsString(v:number):boolean;
   IsObjectPropertyTruthy(v:number,flagName:string):boolean;
   IsArrayInObjectPropertyP(v:number,flagName:string):boolean;
   GetTimestampNow():number;
   MakeLazyConstantMethod(self:object, name:string, valueCallback:function);
   GetStackTrace(qLevelsUp:number):string;
   GetMoonPhaseFromDate(date:Date):string;
   GetStringFromTimestamp(utsTime:number):string;
   GetStringFromDate(date:Date):string;
   fmodP(a:number,b:number):number;
   GetLoopingIndexFromPercentP(nCount:number,pPercent:number):number;
   GetObjectsFromTableP(table:any[][]):object[];
   GetTableFromObjectsP(objects:object[], headers:string[]):any[][];
   GetRowsFromTableP(table:any[][]):object[][];
   GetKeyValuePairsFromDictionaryP(dictionary:object):object[];
   GetObjectArrayFromKeyDictionaryFromObjectsP(objects:object[], key:string):object;
   GetDictionaryFromObjectsP(objects:object[], key:string):object;
   GetDictionaryFromTableP(table:any[][], key:string):object;
   TransposeRowsP(rows:any[][]):any[][];
   GetSetFromObjectsP(objects:object[]):object;
   GetSetFromPropertyOfObjectsP(objects:object[], key:string):object;
   GetStringWithLeadingZeroesFromNumber(value:number, length:number):string;
   IsValueContainedInSet(value:any, set:object):boolean;
   IsValueMissingFromSet(value:any, set:object):boolean;
   intCast(any:any):number;
   boolCast(any:any):boolean;
   floatCast(any:any):number;
   stringCast(any:any):string;
   arrayCast(any:any):Array;
   dateCast(any:any):Date;
   GetWallTimeFromTimestamp(utsTimestamp:number):string;
   GetUrlsFromString(text:string):string[];
   }

declare var Lang : Lang;