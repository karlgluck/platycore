Any line that doesn't start with a space is ignored, so we can write whatever we like up here describing how this works!

   NAME  "GmailLabel -> Spreadsheet"
   FREEZE  12

--- ON ---

   SELECT  "A2"
   TOGGLE  "ON"
        +  "TRUE"
        +  "READONLY"
   SELECT  "B2"
     TEXT  "ON"
   SELECT  "A2:B2"
    PANEL  "0"

--- GO ---

   SELECT  "A1"
   TOGGLE  "GO"
   SELECT  "B1"
     TEXT  "GO"
   SELECT  "A1:B1"
    PANEL  "1"

--- EN ---

   SELECT  "C1"
   TOGGLE  "EN"
        +  "TRUE"
   SELECT  "D1"
     TEXT  "EN"
   SELECT  "C1:D1"
    PANEL  "2"

--- WAKE ---

   SELECT  "E1:I1"
    FIELD  "WAKE"
     EVAL  "agent.WriteField('WAKE', Util_utsNowGet() + 15000)"
   SELECT  "J1:K1"
     TEXT  "WAKE"
   SELECT  "E2:K2"
  FORMULA  "=(E1-(60*2+4)*1000)/1000/60/60/24+25568.6681"
   FORMAT  "DATETIME"
   SELECT  "E1:K2"
    PANEL  "3"

--- LOCK ---

   SELECT  "L1:P1"
    FIELD  "LOCK"
     EVAL  "agent.WriteField('LOCK', Util_utsNowGet())"
   SELECT  "Q1:S1"
     TEXT  "LOCK"
   SELECT  "L2:S2"
  FORMULA  "=(L1-(60*2+4)*1000)/1000/60/60/24+25568.6681"
   FORMAT  "DATETIME"
   SELECT  "L1:S2"
    PANEL  "4"

--- Gmail Label ---

   SELECT "B4:Z4"
    PANEL "6"
   SELECT "B4:N4"
     TEXT "Find all emails in the Gmail label"
   SELECT "O4:Z4"
    FIELD "LABEL"
TEXT "<Gmail Label Name>"
     TEXT "x-recommendation"
    PANEL "5"

    SELECT "B5:N5"
    PANEL "6"
    TEXT "Map emails -> objects by calling"
    SELECT "O5:Z5"
    PANEL "5"
    FIELD  "MAP"
     TEXT  "---"
---------------------
// https://developers.google.com/apps-script/reference/gmail/gmail-message
function (gmailMessage) {
  return {
    'item': gmailMessage.getSubject().trim(),
    'details': gmailMessage.getPlainBody().trim(),
    'email': GAS_GetUrlFromGmailMessage(gmailMessage)
  };
}
---------------------

   SELECT "B6:Z6"
    PANEL "6"
   SELECT "B6:N6"
     TEXT "Write each object as a row in"
   SELECT "O6:Z6"
    FIELD "SHEET"
TEXT "<Google Spreadsheet URL>"
     TEXT "https://docs.google.com/spreadsheets/d/1G6HQHz8ECA0PvM5hWTNNATSC-dp8ltkF1g2RLz9Je40/edit#gid=1727767513"
    PANEL "5"

--- Gmail Label ---
   SELECT "AV1:AW2"
    FIELD "PROCESSED"
        + "READONLY"
        + "HCENTER"
        + "VCENTER"
       FG "#FF0000"
       BG "#440000"
     TEXT 0
    PANEL "7"

--- MAIN ---
This is tricky. I use the same block of cells for the field named SCRIPT, which holds the value MAIN, which refers to the note so-named (MAIN), which happens to also be placed on this same block of cells. Normally, the SCRIPT field would be separate and would hold a reference to one of several other NOTEs.

   SELECT  "C2:D2"
    FIELD  "SCRIPT"
     TEXT  "MAIN"
        +  "HCENTER"
    PANEL  "5"
Below is the only exception to the rule that "everything that doesn't start with a space is ignored".
When a line is entirely dashes and there is a matching line that is entirely dashes, and the line preceding the earlier line ends with a quoted set of dashes, then the quoted dashes are replaced with the JSON-encoded text content of the lines between the dashed lines, and all other text is removed.
     NOTE  "MAIN"
        +  "---"
------------------------
var threads = GmailApp.getUserLabelByName(agent.ReadField('LABEL')).getThreads();
var mapCallback = eval(agent.ReadField('MAP'));
var objects = threads.map(function (thread)
   {
   return mapCallback(thread.getMessages()[0]);
   });
var outputSheet = GAS_GetSheetFromUrl(agent.ReadField('SHEET'));
var headers = GAS_MergeSheetHeaders(outputSheet, Object.keys(objects[0]));
var table = Util_TableFromObjectsP(objects, headers);
GAS_AddRowsToJournalingSheet(Util_GetRowsFromTableP(table).reverse(), outputSheet);
GAS_TrimSheetRows(outputSheet);
agent.WriteField('PROCESSED', Util_intCast(agent.ReadField('PROCESSED')) + threads.length);
agent.Snooze(15 * 60 * 1000);
------------------------
      OFF
