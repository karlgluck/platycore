Any line that doesn't start with a space is ignored, so we can write whatever we like up here describing how this works!

   NAME  "Labels -> Lists"
   FREEZE  3

--- ON ---

   SELECT  "A2"
   TOGGLE  "ON"
        +  "TRUE"
        +  "READONLY"
   SELECT  "B2"
     TEXT  "ON"
   SELECT  "A2:B2"
    PANEL  "0"

--- GO ---

   SELECT  "A1"
   TOGGLE  "GO"
   SELECT  "B1"
     TEXT  "GO"
   SELECT  "A1:B1"
    PANEL  "1"

--- EN ---

   SELECT  "C1"
   TOGGLE  "EN"
        +  "TRUE"
   SELECT  "D1"
     TEXT  "EN"
   SELECT  "C1:D1"
    PANEL  "2"

--- WAKE ---

   SELECT  "E1:I1"
    FIELD  "WAKE"
     EVAL  "agent.WriteField('WAKE', Util_GetTimestampNow() + 15000)"
   SELECT  "J1:K1"
     TEXT  "WAKE"
   SELECT  "E2:K2"
  FORMULA  "=(E1-(60*2+4)*1000)/1000/60/60/24+25568.6681"
   FORMAT  "DATETIME"
   SELECT  "E1:K2"
    PANEL  "3"

--- LOCK ---

   SELECT  "L1:P1"
    FIELD  "LOCK"
     EVAL  "agent.WriteField('LOCK', Util_GetTimestampNow())"
   SELECT  "Q1:R1"
     TEXT  "LOCK"
   SELECT  "L2:R2"
  FORMULA  "=(L1-(60*2+4)*1000)/1000/60/60/24+25568.6681"
   FORMAT  "DATETIME"
   SELECT  "L1:R2"
    PANEL  "4"

--- SHEET ---

   SELECT "S1:AU1"
    PANEL "6"
   SELECT "S1:U1"
     TEXT "Sheet:"
   SELECT "V1:AU1"
    FIELD "SHEET"
    PANEL "5"

--- Processed ---
   SELECT "AV1:AW2"
    FIELD "PROCESSED"
        + "READONLY"
   HALIGN "center"
   VALIGN "middle"
       FG "#FF0000"
       BG "#440000"
     TEXT 0
    PANEL "7"

--- Make Sheet ---

   SELECT "S2:W2"
     TEXT "[Make Sheet]"
       FG "#000"
       BG "#ffff00"
   HALIGN "center"
     NOTE "MAKE_SHEET"
        + "---"
------------------------
var sheet = SpreadsheetApp.create("Labels2Lists", 25, 3).getSheets()[0];
var headers = GAS_MergeSheetHeaders(sheet, ['input_label', 'object_from_gmail_message_function', 'sheet_url', 'output_label']);
GAS_AddRowsToJournalingSheet(
      [['<input label>', "// https://developers.google.com/apps-script/reference/gmail/gmail-messagefunction (gmailMessage) {\n  var subject = gmailMessage.getSubject().trim();\n  var subjectUrls = Util_GetUrlsFromString(subject);\n  var body = gmailMessage.getPlainBody().trim();\n  var bodyUrls = Util_GetUrlsFromString(body);\n  return {\n    'item': subject.trim(),\n    'url': subjectUrls.concat(bodyUrls).concat([''])[0],\n    'details': body,\n    'email': GAS_GetUrlFromGmailMessage(gmailMessage)\n  };\n}", '<sheet url>', '<output label>']],
      sheet);
agent.WriteField('SHEET', GAS_GetUrlFromSheet(sheet));
------------------------

--- MAIN ---
This is tricky. I use the same block of cells for the field named SCRIPT, which holds the value MAIN, which refers to the note so-named (MAIN), which happens to also be placed on this same block of cells. Normally, the SCRIPT field would be separate and would hold a reference to one of several other NOTEs.

   SELECT  "C2:D2"
    FIELD  "SCRIPT"
     TEXT  "MAIN"
   HALIGN  "center"
    PANEL  "5"
Below is the only exception to the rule that "everything that doesn't start with a space is ignored".
When a line is entirely dashes and there is a matching line that is entirely dashes, and the line preceding the earlier line ends with a quoted set of dashes, then the quoted dashes are replaced with the JSON-encoded text content of the lines between the dashed lines, and all other text is removed.
     NOTE  "MAIN"
        +  "---"
------------------------
var inputLabel = GmailApp.getUserLabelByName(agent.ReadField('INPUT_LABEL'));
var threads = inputLabel.getThreads();
var mapCallback = eval(agent.ReadField('MAP'));
var objects = threads.map(function (thread)
   {
   return mapCallback(thread.getMessages()[0]);
   });
var outputSheet = GAS_GetSheetFromUrl(agent.ReadField('SHEET'));
var headers = GAS_MergeSheetHeaders(outputSheet, Object.keys(objects[0]));
var table = Util_TableFromObjectsP(objects, headers);
GAS_AddRowsToJournalingSheet(Util_GetRowsFromTableP(table).reverse(), outputSheet);
GAS_TrimSheetRows(outputSheet);
agent.WriteField('PROCESSED', Util_intCast(agent.ReadField('PROCESSED')) + threads.length);
var outputLabel = GmailApp.getUserLabelByName(agent.ReadField('OUTPUT_LABEL'));
threads.forEach(function (e)
   {
   e.removeLabel(inputLabel).addLabel(outputLabel);
   });
agent.Snooze(15 * 60 * 1000);
------------------------
      OFF
